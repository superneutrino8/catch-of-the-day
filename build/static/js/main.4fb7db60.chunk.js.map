{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/AddFishForm.jsx","components/EditFishForm.jsx","components/Login.jsx","base.js","components/Inventory.js","components/Order.js","components/Fish.jsx","sample-fishes.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","fish","name","price","parseFloat","status","desc","image","addFishes","currentTarget","reset","EditFishForm","handleChange","console","log","updateFish","index","onChange","onClick","deleteFish","Login","textAlign","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","async","fetch","storeId","context","storeData","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","logoutBtn","Object","keys","fishes","map","key","loadFishes","Order","renderOder","count","order","isAvailable","transitionOptions","classNames","timeout","enter","exit","component","removeFromOrder","orderIDs","total","size","reduce","prevTotal","Fish","handleClick","addToOrder","details","src","alt","disabled","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","App","Date","now","sampleFishes","updatedFish","params","match","localStorageRef","localStorage","getItem","JSON","parse","Base","syncState","setItem","stringify","removeBinding","notFound","Router","BrowserRouter","Switch","Route","exact","path","NotFound","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4fb7db60.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { getFunName } from '../helpers';\r\n\r\nclass StorePicker extends Component {\r\n\r\n    myInput = React.createRef();\r\n\r\n    static propTypes = {\r\n        history: PropTypes.object\r\n    }\r\n\r\n    goToStore = event => {\r\n        event.preventDefault();\r\n        const storeName = this.myInput.current.value;\r\n        this.props.history.push(`/store/${storeName}`);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n                <h2>Enter A Store</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    ref={this.myInput}\r\n                    required\r\n                    placeholder=\"Store Name\"\r\n                    defaultValue={getFunName()} />\r\n                <button type=\"submit\">Visit Store -></button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StorePicker;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Header = props => {\r\n    return (\r\n        <header className=\"top\">\r\n            <h1>Catch\r\n                <span className=\"ofThe\">\r\n                    <span className=\"of\">Of</span>\r\n                    <span className=\"the\">The</span>\r\n                </span>\r\n                Day\r\n            </h1>\r\n            <h3 className=\"tagline\">\r\n                <span>{props.tagline}</span>\r\n            </h3>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    tagline: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass AddFishForm extends React.Component {\r\n\r\n    nameRef = React.createRef();\r\n    priceRef = React.createRef();\r\n    statusRef = React.createRef();\r\n    descRef = React.createRef();\r\n    imageRef = React.createRef();\r\n\r\n    static propTypes = {\r\n        addFishes: PropTypes.func\r\n    }\r\n\r\n    createFish = (event) => {\r\n        event.preventDefault();\r\n        const fish = {\r\n            name: this.nameRef.current.value,\r\n            price: parseFloat(this.priceRef.current.value),\r\n            status: this.statusRef.current.value,\r\n            desc: this.descRef.current.value,\r\n            image: this.imageRef.current.value,\r\n        };\r\n        this.props.addFishes(fish);\r\n        // Clear Form\r\n        event.currentTarget.reset();\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n                <input\r\n                    name=\"price\" ref={this.priceRef}\r\n                    type=\"text\"\r\n                    placeholder=\"Price\"\r\n                />\r\n                <select name=\"status\" ref={this.statusRef} >\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n\r\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n                <input\r\n                    name=\"image\" ref={this.imageRef}\r\n                    type=\"text\"\r\n                    placeholder=\"Image\"\r\n                />\r\n                <button type=\"submit\">+ Add Fish</button>\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFishForm;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport class EditFishForm extends Component {\r\n\r\n    static propTypes = {\r\n        updateFish: PropTypes.func,\r\n        fish: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            price: PropTypes.number,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string\r\n        }),\r\n        index: PropTypes.string\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        console.log(event.currentTarget);\r\n\r\n        // updtae the fish\r\n        // 1. Take copy of existing fish and update it\r\n        const fish = {\r\n            ...this.props.fish,\r\n            [event.currentTarget.name]: event.currentTarget.value\r\n        }\r\n        // 2. Call method for change\r\n        this.props.updateFish(this.props.index, fish);\r\n\r\n        console.log(fish);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"fish-edit\">\r\n                <input name=\"name\" type=\"text\" onChange={this.handleChange} value={this.props.fish.name} />\r\n                <input\r\n                    name=\"price\"\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                    value={this.props.fish.price}\r\n                />\r\n                <select name=\"status\" onChange={this.handleChange} value={this.props.fish.status} >\r\n                    <option value=\"available\">Fresh!</option>\r\n                    <option value=\"unavailable\">Sold Out!</option>\r\n                </select>\r\n\r\n                <textarea name=\"desc\" onChange={this.handleChange} value={this.props.fish.desc} />\r\n                <input\r\n                    name=\"image\"\r\n                    type=\"text\"\r\n                    onChange={this.handleChange}\r\n                    value={this.props.fish.image}\r\n                />\r\n                <button onClick={() => this.props.deleteFish(this.props.index)}>Remove Fish</button>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditFishForm\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Login = (props) => {\r\n    return (\r\n        <nav className=\"login\">\r\n            <h2>Inventory Login</h2>\r\n            <p style={{ textAlign: \"center\" }}>\r\n                Sign In to manage your Store's Inventory\r\n            </p>\r\n            <button className=\"github\" onClick={() => props.authenticate('Github')} >Login With GitHub</button>\r\n            <button className=\"twitter\" onClick={() => props.authenticate('Twitter')} >Login With Twitter</button>\r\n            <button className=\"facebook\" onClick={() => props.authenticate('Facebook')} >Login With Facebook</button>\r\n        </nav>\r\n    )\r\n}\r\n\r\nLogin.propTypes = {\r\n    authenticate: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Login\r\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBN5TI4pJKsMXwyihFfMuVFgmHQGpVrP0U\",\r\n    authDomain: \"catch-of-the-day-59f44.firebaseapp.com\",\r\n    databaseURL: \"https://catch-of-the-day-59f44.firebaseio.com\"\r\n});\r\n\r\nconst base = Rebase.createClass(firebase.database());\r\n\r\nexport {firebaseApp};\r\n\r\nexport default base;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport firebase from 'firebase';\r\n\r\nimport AddFishForm from './AddFishForm';\r\nimport EditFishForm from './EditFishForm';\r\nimport Login from './Login';\r\nimport base, { firebaseApp } from '../base';\r\n\r\nclass Inventory extends Component {\r\n    state = {\r\n        uid: null,\r\n        owner: null\r\n    }\r\n\r\n    static propTypes = {\r\n        updateFish: PropTypes.func,\r\n        deleteFish: PropTypes.func,\r\n        fishes: PropTypes.object\r\n    }\r\n\r\n    componentDidMount() {\r\n        firebaseApp.auth().onAuthStateChanged(user => {\r\n            if(user) {\r\n                this.authHandler({user});\r\n            }\r\n        })\r\n    }\r\n\r\n    authHandler = async authData => {\r\n        // 1. Look for the owner\r\n        const storeData = await base.fetch(this.props.storeId, { context: this });\r\n        // console.log(storeData);\r\n        // 2. Claim the store if no owner found\r\n        if (!storeData.owner)\r\n            await base.post(`${this.props.storeId}/owner`, {\r\n                data: authData.user.uid\r\n            })\r\n\r\n        this.setState({\r\n            uid: authData.user.uid,\r\n            owner: storeData.owner || authData.user.uid\r\n        })\r\n    }\r\n\r\n    authenticate = (provider) => {\r\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\r\n        firebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\r\n    }\r\n\r\n    logout = async () => {\r\n        firebaseApp.auth().signOut();\r\n        this.setState({\r\n            uid: null\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const logoutBtn = <button onClick={this.logout}>Logout!</button>\r\n\r\n        if (!this.state.uid) {\r\n            return <Login authenticate={this.authenticate} />;\r\n        }\r\n\r\n        if (this.state.uid !== this.state.owner) {\r\n            return (\r\n                <div>\r\n                    <span>{logoutBtn}</span>\r\n                    <br />\r\n                    <p style={{ textAlign: \"center\" }}>Sorry! You are not the owner of this Store!</p>\r\n                </div>\r\n            )\r\n        }\r\n\r\n        return (\r\n            <div className=\"inventory\">\r\n                <h2>Inventory</h2>\r\n                <span>{logoutBtn}</span>\r\n                <br />\r\n                <br />\r\n                {Object.keys(this.props.fishes).map(key => <EditFishForm key={key} index={key} fish={this.props.fishes[key]} updateFish={this.props.updateFish} deleteFish={this.props.deleteFish} />)}\r\n                <AddFishForm addFishes={this.props.addFishes} />\r\n                <button onClick={this.props.loadFishes}>Load Sample Fishes</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Inventory;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nclass Order extends Component {\r\n    state = {}\r\n\r\n    static propTypes = {\r\n        removeFromOrder: PropTypes.func,\r\n        order: PropTypes.object,\r\n        fishes: PropTypes.object\r\n    }\r\n\r\n    renderOder = (key) => {\r\n        const fish = this.props.fishes[key];\r\n        const count = this.props.order[key];\r\n        const isAvailable = fish && fish.status === 'available';\r\n        const transitionOptions = {\r\n            classNames: \"order\",\r\n            key,\r\n            timeout: { enter: 500, exit: 500 }\r\n        };\r\n\r\n        if (!fish) return null;\r\n\r\n        if (!isAvailable) {\r\n            return (\r\n                <CSSTransition {...transitionOptions}>\r\n                    <li key={key}>\r\n                        Sorry {fish ? fish.name : 'fish'} is not available\r\n                </li>\r\n                </CSSTransition>);\r\n        }\r\n        else {\r\n            return (\r\n                <CSSTransition {...transitionOptions}>\r\n                    <li key={key}>\r\n                        <span>\r\n                            <TransitionGroup component=\"span\" className=\"count\">\r\n                                <CSSTransition\r\n                                    classNames=\"count\"\r\n                                    key={count}\r\n                                    timeout={{ enter: 500, exit: 500 }}\r\n                                >\r\n                                    <span>{count}</span>\r\n                                </CSSTransition>\r\n                            </TransitionGroup>\r\n                    lbs {fish.name}\r\n                            {formatPrice(count * fish.price)}\r\n                            <button onClick={() => this.props.removeFromOrder(key)}>\r\n                                &times;\r\n                    </button>\r\n                        </span>\r\n                    </li>\r\n                </CSSTransition>\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let orderIDs, total = 0;\r\n        const size = this.props.order === null ? 0 : 1;\r\n        if (size > 0) {\r\n            orderIDs = Object.keys(this.props.order);\r\n            total = orderIDs.reduce((prevTotal, key) => {\r\n                const fish = this.props.fishes[key];\r\n                const count = this.props.order[key];\r\n                const isAvailable = fish && fish.status === 'available';\r\n                if (isAvailable) {\r\n                    return (prevTotal + (count * fish.price));\r\n                }\r\n                else {\r\n                    return prevTotal;\r\n                }\r\n            }, 0);\r\n        }\r\n        return (\r\n            <div className=\"order-wrap\">\r\n                <h2>Order</h2>\r\n                <TransitionGroup component=\"ul\" className=\"order\">\r\n                    {size === 0 ? '' : orderIDs.map(this.renderOder)}\r\n                </TransitionGroup>\r\n                <div className=\"total\">\r\n                    Total:\r\n                    <strong>{formatPrice(total)}</strong>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Order;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { formatPrice } from \"../helpers\";\r\n\r\nclass Fish extends Component {\r\n\r\n    static propTypes = {\r\n        addToOrder: PropTypes.func,\r\n        details: PropTypes.shape({\r\n            image: PropTypes.string,\r\n            name: PropTypes.string,\r\n            price: PropTypes.number,\r\n            desc: PropTypes.string,\r\n            status: PropTypes.string\r\n        })\r\n    }\r\n\r\n    handleClick = () => {\r\n        this.props.addToOrder(this.props.index);\r\n    }\r\n\r\n    render() {\r\n        const { image, name, price, desc, status } = this.props.details;\r\n        const isAvailable = status === 'available';\r\n\r\n        return (\r\n            <li className=\"menu-fish\">\r\n                <img src={image} alt={name} />\r\n                <h3 className=\"fish-name\">{name}\r\n                    <span className=\"price\">{formatPrice(price)}</span>\r\n                </h3>\r\n                <p>{desc}</p>\r\n                <button disabled={!isAvailable} onClick={this.handleClick}>{isAvailable ? 'Add To Cart' : 'Sold Out!'}</button>\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Fish;\r\n\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Header from './Header';\r\nimport Inventory from './Inventory';\r\nimport Order from './Order';\r\nimport Fish from './Fish';\r\n\r\nimport Base from '../base';\r\n\r\nimport sampleFishes from '../sample-fishes';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        fishes: {},\r\n        order: {}\r\n    };\r\n\r\n    static propTypes = {\r\n        match: PropTypes.object,\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { params } = this.props.match;\r\n\r\n        const localStorageRef = localStorage.getItem(params.storeId);\r\n\r\n        if (localStorage) {\r\n            this.setState({\r\n                order: JSON.parse(localStorageRef)\r\n            })\r\n        }\r\n\r\n        this.ref = Base.syncState(`${params.storeId}/fishes`, {\r\n            context: this,\r\n            state: \"fishes\"\r\n        });\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        Base.removeBinding(this.ref);\r\n    }\r\n\r\n    addFishes = (fish) => {\r\n        console.log('INSIDE App.js');\r\n        // 1. Create copy of state\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. Makes changes in copy\r\n        fishes[`fish${Date.now()}`] = fish;\r\n        // 3. Make changes in State\r\n        this.setState({\r\n            fishes: fishes,\r\n        })\r\n    };\r\n\r\n    loadFishes = (event) => {\r\n        this.setState({\r\n            fishes: sampleFishes\r\n        });\r\n    }\r\n\r\n    updateFish = (key, updatedFish) => {\r\n        // 1. Create copy of state\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. Make changes in copy\r\n        fishes[key] = updatedFish;\r\n        // 3. Push changes in state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    deleteFish = (key) => {\r\n        // 1. Create copy of state\r\n        const fishes = { ...this.state.fishes };\r\n        // 2. Make changes in copy\r\n        fishes[key] = null;\r\n        // 3. Push changes in state\r\n        this.setState({ fishes });\r\n    }\r\n\r\n    addToOrder = (key) => {\r\n        // 1. Create copy of state\r\n        const order = { ...this.state.order };\r\n        // 2. Make changes in copy\r\n        order[key] = order[key] + 1 || 1;\r\n        // 3. Push changes in state\r\n        this.setState({ order });\r\n    }\r\n\r\n    removeFromOrder = (key) => {\r\n        // 1. Create copy of state\r\n        const order = { ...this.state.order };\r\n        // 2. Make changes in copy\r\n        delete order[key];\r\n        // 3. Push changes in state\r\n        this.setState({ order });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"catch-of-the-day\">\r\n                <div className=\"menu\">\r\n                    <Header tagline=\"Fresh Seafood Market\" />\r\n                    <ul className=\"fishes\">\r\n                        {\r\n                            Object.keys(this.state.fishes).map(key => <Fish key={key} index={key} addToOrder={this.addToOrder} details={this.state.fishes[key]} />)\r\n                        }\r\n                    </ul>\r\n                </div>\r\n                <Order fishes={this.state.fishes} order={this.state.order} removeFromOrder={this.removeFromOrder} />\r\n                <Inventory\r\n                    fishes={this.state.fishes}\r\n                    addFishes={this.addFishes}\r\n                    loadFishes={this.loadFishes}\r\n                    updateFish={this.updateFish}\r\n                    deleteFish={this.deleteFish}\r\n                    storeId={this.props.match.params.storeId} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nconst notFound = () => {\r\n    return (\r\n        <h1>NOT FOUND!!</h1>\r\n    );\r\n}\r\n\r\nexport default notFound;","import React from 'react';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\n\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\n\r\nconst Router = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path=\"/\" component={StorePicker} />\r\n                <Route path=\"/store/:storeId\" component={App} />\r\n                <Route component={NotFound} />\r\n            </Switch>\r\n        </BrowserRouter>\r\n    );\r\n}\r\n\r\nexport default Router;","// let's go!\r\nimport React from 'react'\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './css/style.css';\r\n\r\nimport Router from './components/Router';\r\n\r\nReactDOM.render(<Router />, document.querySelector('#main'));"],"sourceRoot":""}